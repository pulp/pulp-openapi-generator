---
name: "pulp-openapi-generator PR CI"
on:
  pull_request:

concurrency:
  group: ${{ github.ref_name }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: "pulp-openapi-generator"

jobs:
  check-commits:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
          path: "pulp-openapi-generator"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.11"
      - name: "Install python dependencies"
        run: |
          pip install requests pygithub
      - name: "Check commit message"
        if: github.event_name == 'pull_request'
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"
        run: |
          .github/workflows/scripts/check_commit.sh

  docs:
    # The workflow tag and the pulpdocs_ref must match.
    uses: "pulp/pulp-docs/.github/workflows/docs-ci.yml@main"
    with:
      pulpdocs_ref: "main"

  test:
    runs-on: "ubuntu-latest"
    # run only after lint and docs finishes
    needs:
      - "docs"
    strategy:
      fail-fast: false
      matrix:
        env:
          - TEST: "pulp"

    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
          path: "pulp-openapi-generator"

      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.11"

      - uses: ruby/setup-ruby@v1
        with:
            ruby-version: "2.7"

      - name: "Install python dependencies"
        run: |
          echo ::group::PYDEPS
          pip install towncrier twine wheel httpie docker netaddr boto3 'ansible~=10.3.0' mkdocs jq jsonpatch bump-my-version
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/pulpcore/.ci/assets/httpie/" >> $GITHUB_ENV
          echo ::endgroup::

      - name: Before Install
        run: .github/workflows/scripts/before_install.sh
        shell: bash

      - name: Install
        run: .github/workflows/scripts/install.sh
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash

      - name: Before Script
        run: |
          .github/workflows/scripts/before_script.sh

      - name: Script
        run: .github/workflows/scripts/script.sh
        shell: bash

      - name: After failure
        if: failure()
        run: |
          echo "Need to debug? Please check: https://github.com/marketplace/actions/debugging-with-tmate"
          http --timeout 30 --check-status --pretty format --print hb http://pulp/pulp/api/v3/status/ || true
          docker images || true
          docker ps -a || true
          docker logs pulp || true
          docker exec pulp ls -latr /etc/yum.repos.d/ || true
          docker exec pulp cat /etc/yum.repos.d/* || true

  ready-to-ship:
    # This is a dummy dependent task to have a single entry for the branch protection rules.
    runs-on: "ubuntu-latest"
    needs:
      - "check-commits"
      - "test"
      - "docs"
    if: "always()"
    steps:
      - name: "Collect needed jobs results"
        working-directory: "."
        run: |
          echo '${{toJson(needs)}}' | jq -r 'to_entries[]|select(.value.result!="success")|.key + ": " + .value.result'
          echo '${{toJson(needs)}}' | jq -e 'to_entries|map(select(.value.result!="success"))|length == 0'
          echo "CI says: Looks good!"
...
